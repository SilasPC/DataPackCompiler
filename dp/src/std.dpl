
pub mod events {

	#[tick]
	event tick

	#[load]
	event load

	#[debug]
	on load {
		/tellraw @a "Datapack loaded!"
	}

}

#[debug]
pub mod debug {

	pub fn panic(): void {
		
		trace()

		// temp, need to have some compile hook to get datapack name
		/datapack disable datapack

		/say WARNING: Datapack failed to panic. This is likely because the pack name was changed after emission.

	}

	#[inline]
	pub fn trace(): void {
		/tellraw @a [{"text":"","color":"red","bold":true},{"nbt":"stack","storage":"tmp:std","interpret":true},{"text":" Datapack panicking"}]
	}

}

pub mod math {

	pub fn pow(val:int,p:int): int {
		if (p == 0) return 1
		if (val == 0) return 0
		if (val == 1) return val
		let res = val
		let cur = 1
		while (cur < p) {
			res *= val
			cur++
		}
		return res
	}

	struct Vec3 {
		pub x: int
		pub y: int
		pub z: int
		
		/*
		#[inline]
		pub add(vec:Vec3): Vec3 {
			return Vec3(
				this.x + vec.x,
				this.y + vec.y,
				this.z + vec.z
			)
		}

		pub dot(vec:Vec3): int {
			return this.x * vec.x + this.y * vec.y + this.z * vec.z
		}
		*/

	}

	fn add(a:int,b:int): int {
		return a + b
	}
	
}
