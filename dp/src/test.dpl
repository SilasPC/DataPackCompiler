
event lolz extends std::events::tick {
	std::debug::panic()
}

on abc {
	/say wtf
}

event abc {
	/say abc fired
}

struct A {
	pub x: int
	pub y: int
}
struct B {
	pub z: int
}
struct C extends A,B {
	pub l: int
}

fn x(): bool {
	let t = 0
	t += (2+t) * t
	/execute if score @a a matches -1..2
	/execute as @a positioned 1 2 3 align x facing entity @s feet run say hello!
	y()
	let lol = 1 > 2
	let lol2 = y()
	/*if (lol) {
		/say hello
	}*/
	return lol2
}

#[todo]
fn y(): bool {
	return 1 != 2
}
